/*
 * test.c
 *
 *  Created on: 29 mars 2016
 *      Author: Stephane
 */


#include <stdio.h>
#include "io.h"
#include "system.h"

int main(void)
{

  int enable = 1;
  int XLENGTH = 55;
  int XDIAG_DEMI = 30;
  int YDIAG_DEMI = 55;
  int XYDIAG_DEMI = (XDIAG_DEMI << 10) | YDIAG_DEMI;
  int RANK1_X_OFFSET = 250;
  int RANK1_Y_OFFSET = 160;
  int RANK1_XY_OFFSET = (RANK1_X_OFFSET << 10) | RANK1_Y_OFFSET;
  int QBERT_POSITION_X0 = 250;
  int QBERT_POSITION_Y0 = 160;
//  int QBERT_POSITION_X1 = RANK1_X_OFFSET - 1;
//  int QBERT_POSITION_Y1 = RANK1_Y_OFFSET + 4*YDIAG_DEMI;
//  int QBERT_POSITION_XY1 = (QBERT_POSITION_X1 << 10) | QBERT_POSITION_Y1;
  int qbert_passage = 0x1;
  int qbert_jump = 0;
  int lecture;

  IOWR_32DIRECT(NIOS_MTL_CONTROLLER_0_BASE,0, enable);
  IOWR_32DIRECT(NIOS_MTL_CONTROLLER_0_BASE,4, XLENGTH);
  IOWR_32DIRECT(NIOS_MTL_CONTROLLER_0_BASE,8, XYDIAG_DEMI);
  IOWR_32DIRECT(NIOS_MTL_CONTROLLER_0_BASE,12, RANK1_XY_OFFSET);
  IOWR_32DIRECT(NIOS_MTL_CONTROLLER_0_BASE,20, QBERT_POSITION_XY0);
//  IOWR_32DIRECT(NIOS_MTL_CONTROLLER_0_BASE,24, QBERT_POSITION_XY1);
  IOWR_32DIRECT(NIOS_MTL_CONTROLLER_0_BASE,28, qbert_passage);
  IOWR_32DIRECT(NIOS_MTL_CONTROLLER_0_BASE, 32, qbert_jump);

  lecture = IORD_32DIRECT(NIOS_MTL_CONTROLLER_0_BASE,24);
  printf("Move my Qbert!\n");
  printf("cases allumés: '%d' \n",lecture);
  /*
int count = 0;
int qbertx;
int qberty;
int endX;
int endY;
int start;
int middle;
int middleX;
int middleY;

while(1){
if (count == 280){
	if(qbertx == endX && qberty == endY)
		IOWR_32DIRECT(NIOS_MTL_CONTROLLER_0_BASE, 20, start);
	else if (qbertx == middleX && qberty == middleY){
		IOWR_32DIRECT(NIOS_MTL_CONTROLLER_0_BASE, 20, middle);
		IOWR_32DIRECT(NIOS_MTL_CONTROLLER_0_BASE, 32, qbert_jump);
	}
	else{
	IOWR_32DIRECT(NIOS_MTL_CONTROLLER_0_BASE, 32, qbert_jump);
	}
	count = 0;
}
else{
	count += 1;
}
}*/
  return 0;
}

